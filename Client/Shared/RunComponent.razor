<div>
    <p>
        v0.0.1.9
    </p>
    <div class="jumbotron">
        Hinweise: Um einen Lauf zu starten musst Du nicht online sein. Du kannst den gesamten Lauf ohne
        Internet-Verbindung aufzeichnen.
        Sobald Du den Lauf beendet hast (und wieder Online bist) wird der Zeitpunkt und die Distanz übertragen – die
        <span class="text-warning">Strecke und Positionsdaten werden nicht an den Server gesendet.</span>
        <span clasS="text-danger">Nach zwei Stunden oder 42 km wird der Lauf automatisch beendet.</span>
        Alle 60 Sekunden werden die Lauf-Daten aktualisiert.
    </div>
    <div class="btn-group">
    @if (runService.runStatus == Models.RunStatus.Init) {
        <button class="btn btn-primary" @onclick="StartRun">Lauf starten!</button>
    } else {
        <div class="ml-3">
            @if (UploadStatus == Models.UploadStatus.Uploading)
            {
                <span class="oi spinner-grow spinner-grow-sm text-success"> </span> @("Uploading")
            }
            else if (UploadStatus == Models.UploadStatus.UploadSuccess)
            {
                <span class="oi oi-circle-check text-success">&nbsp;</span> @("Upload successful")
                
            }
            else if (UploadStatus == Models.UploadStatus.UploadFailed)
            {
                @if (runService.runStatus == Models.RunStatus.Failed) {
                    <h4><span class="badge badge-danger">@debugInfo</span></h4>
                } else {
                <span class="oi oi-circle-x text-danger">&nbsp;</span> @("Upload failed. Please try again later.")
                <p>
                    Deine Strecke wurde noch nicht übertragen. Bitte versuche es später noch einmal.
                </p>
                <button type="button" class="btn btn-warning" @onclick="@( async => SubmitData())">Strecke speichern</button>
                }
            }
            else
            {

            }
            <button class="btn btn-primary" @onclick="StartRun">Neuen Lauf starten</button>
        </div>
    }
    </div>
    @if (runService.runStatus == Models.RunStatus.Running) {
        
        <h4><span class="oi spinner-grow spinner-grow-sm text-success mb-1"></span> Die Aufzeichung läuft - Guten Lauf!</h4>
        <div class="btn-group mt-2">
            <button class="btn btn-primary" @onclick="StopRun">Lauf beenden</button>
        </div>
    

    }

    <div class="mt-5 mb-5">
        <h4 class="text-white-50">Startzeit: @runService.Run.RunInfo.StartTime.ToLocalTime()</h4>
        <h4 class="text-white-50">Du hast @runService.Run.RunInfo.Distance m in @runService.Run.RunInfo.Duration.ToString(@"hh\:mm\:ss")
            zurückgelegt!</h4>
        <h4><span class="badge badge-info">&empty;-Geschwindigkeit: @runService.Run.RunInfo.Kph km/h</span></h4>
        <h4><span class="badge badge-info">Höchstgeschwindigkeit: @runService.Run.RunInfo.KphMax km/h</span></h4>
        <h4><span class="badge badge-info">Gemessene Punkte: @runService.Run.RunItems.Count</span></h4>
    </div>

    @if (runService.runStatus == Models.RunStatus.FinishedAndTransmitting)
    {
        if (runService.Run.RunInfo.Feedback != null) {
            <FeedbackComponent Feedback="runService.Run.RunInfo.Feedback"></FeedbackComponent>
        }
        <div>
            <RunMapComponent Run="runService.Run"></RunMapComponent>
        </div>
    }

    <div>
        <p>
            @debugInfo
        </p>
    </div>
</div>